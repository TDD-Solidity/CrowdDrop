{
  "contractName": "CrowdDropBase",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EventClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RegistrationOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WinningsClaimingOpen",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cooAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCOO",
          "type": "address"
        }
      ],
      "name": "setCOO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EventClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RegistrationOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WinningsClaimingOpen\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cfoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCFO\",\"type\":\"address\"}],\"name\":\"setCFO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCOO\",\"type\":\"address\"}],\"name\":\"setCOO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EventClose()\":{\"details\":\"The EventClose event is fired whenever an event closes. After this event is fired users can no\"},\"RegistrationOpen()\":{\"details\":\"The RegistrationOpen event is fired whenever a new event starts and users can begin restering.\"},\"Transfer(address,address)\":{\"details\":\"Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred\"},\"WinningsClaimingOpen()\":{\"details\":\"The RegistrationOpen event is fired whenever a new event starts and users can begin restering.\"}},\"kind\":\"dev\",\"methods\":{\"pause()\":{\"details\":\"Called by any \\\"C-level\\\" role to pause the contract. Used only when  a bug or exploit is detected and we need to limit damage.\"},\"setCEO(address)\":{\"details\":\"Assigns a new address to act as the CEO. Only available to the current CEO.\",\"params\":{\"_newCEO\":\"The address of the new CEO\"}},\"setCFO(address)\":{\"details\":\"Assigns a new address to act as the CFO. Only available to the current CEO.\",\"params\":{\"_newCFO\":\"The address of the new CFO\"}},\"setCOO(address)\":{\"details\":\"Assigns a new address to act as the COO. Only available to the current CEO.\",\"params\":{\"_newCOO\":\"The address of the new COO\"}},\"unpause()\":{\"details\":\"Unpauses the smart contract. Can only be called by the CEO, since  one reason we may pause the contract is when CFO or COO accounts are  compromised.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jim/Git-Projects/CrowdDrop/eth/contracts/core/CrowdDropBase.sol\":\"CrowdDropBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jim/Git-Projects/CrowdDrop/eth/contracts/core/CrowdDropBase.sol\":{\"keccak256\":\"0xec9c8760ac90bcdf3b4b632b47a620dd5c6606207fe9f78e3a36417010934eba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c685cd485fa1c14a08fef45e61dc5b7594eab0acf1e0f76614ba93bcdf81125\",\"dweb:/ipfs/Qmbh5T6uT6CwosoHQdeyFTSPxQUwEbJUR8NVG4nRDNpBGe\"]},\"/Users/jim/Git-Projects/CrowdDrop/eth/contracts/roles/ExecutivesAccessControl.sol\":{\"keccak256\":\"0xef28cb072352672c6b3396ee19120885ee3c571c2ac8bdaef01996387ae8fc95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61912b5f41fe5edfb4453772448e4ad1c12a2a43fb26ab96a52c70b51e843a3b\",\"dweb:/ipfs/QmQu2nC3xTCALkpPwBRNceDoqoPzAayNJvemnZghJMkpbq\"]},\"/Users/jim/Git-Projects/CrowdDrop/eth/contracts/roles/Roles.sol\":{\"keccak256\":\"0xd939cdfcbbc1e2df34fcb5cc7602e58fb1477bcd648da262547c3586ae3e00ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://134e2ff5d325f91e4835a4e6322282949520a87b6c92d29f992014ac36da01d9\",\"dweb:/ipfs/QmXME75Z24m4jKVTCTHpxV4o8abxgUP3dr9RiAZ6tPNdjC\"]},\"@openzeppelin/contracts/finance/PaymentSplitter.sol\":{\"keccak256\":\"0x5b5c64239a7980f0c2c5baa584a3350912c7260db32f6d6544a2755f59a0c488\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce18d9dd07538250504704e46450f4dbfe80808e677f9a0849cdd07bbaac225\",\"dweb:/ipfs/QmSCWBWkVbgJHLiyAUZex6iqJcYPy5GL4coa2ysewyxF8Q\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600260146101000a81548160ff021916908315150217905550600560035534801561003057600080fd5b50610766806100406000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80633f4ba83a116100665780633f4ba83a1461010c5780634e0a3379146101165780635c975abb146101325780638456cb5914610150578063b047fb501461015a57610093565b80630519ce79146100985780630a0f8168146100b657806327d7874c146100d45780632ba73c15146100f0575b600080fd5b6100a0610178565b6040516100ad91906106a5565b60405180910390f35b6100be61019e565b6040516100cb91906106a5565b60405180910390f35b6100ee60048036038101906100e9919061065e565b6101c2565b005b61010a6004803603810190610105919061065e565b610297565b005b61011461036d565b005b610130600480360381019061012b919061065e565b6103fb565b005b61013a6104d1565b60405161014791906106c0565b60405180910390f35b6101586104e4565b005b610162610623565b60405161016f91906106a5565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561025457600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ef57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561032957600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c557600080fd5b600260149054906101000a900460ff166103de57600080fd5b6000600260146101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561048d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061058b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806105e35750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105ec57600080fd5b600260149054906101000a900460ff161561060657600080fd5b6001600260146101000a81548160ff021916908315150217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061065881610719565b92915050565b60006020828403121561067057600080fd5b600061067e84828501610649565b91505092915050565b610690816106db565b82525050565b61069f816106ed565b82525050565b60006020820190506106ba6000830184610687565b92915050565b60006020820190506106d56000830184610696565b92915050565b60006106e6826106f9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610722816106db565b811461072d57600080fd5b5056fea264697066735822122025702ea25ecddcbb179518c0be5be53d45da3d71952a5de59a9381bf973ce76964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80633f4ba83a116100665780633f4ba83a1461010c5780634e0a3379146101165780635c975abb146101325780638456cb5914610150578063b047fb501461015a57610093565b80630519ce79146100985780630a0f8168146100b657806327d7874c146100d45780632ba73c15146100f0575b600080fd5b6100a0610178565b6040516100ad91906106a5565b60405180910390f35b6100be61019e565b6040516100cb91906106a5565b60405180910390f35b6100ee60048036038101906100e9919061065e565b6101c2565b005b61010a6004803603810190610105919061065e565b610297565b005b61011461036d565b005b610130600480360381019061012b919061065e565b6103fb565b005b61013a6104d1565b60405161014791906106c0565b60405180910390f35b6101586104e4565b005b610162610623565b60405161016f91906106a5565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561025457600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ef57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561032957600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c557600080fd5b600260149054906101000a900460ff166103de57600080fd5b6000600260146101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561048d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061058b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806105e35750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105ec57600080fd5b600260149054906101000a900460ff161561060657600080fd5b6001600260146101000a81548160ff021916908315150217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061065881610719565b92915050565b60006020828403121561067057600080fd5b600061067e84828501610649565b91505092915050565b610690816106db565b82525050565b61069f816106ed565b82525050565b60006020820190506106ba6000830184610687565b92915050565b60006020820190506106d56000830184610696565b92915050565b60006106e6826106f9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610722816106db565b811461072d57600080fd5b5056fea264697066735822122025702ea25ecddcbb179518c0be5be53d45da3d71952a5de59a9381bf973ce76964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1558:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:12"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:12",
                "type": ""
              }
            ],
            "src": "7:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:12",
                "type": ""
              }
            ],
            "src": "152:262:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:12"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:12",
                "type": ""
              }
            ],
            "src": "420:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:50:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "620:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "640:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "625:14:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:21:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:34:12"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "598:3:12",
                "type": ""
              }
            ],
            "src": "544:109:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "757:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "767:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "790:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "767:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "847:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "860:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "871:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "856:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "856:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "803:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "729:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "741:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "752:4:12",
                "type": ""
              }
            ],
            "src": "659:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "979:118:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "989:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1001:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1012:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "997:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "989:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1063:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1025:37:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1025:65:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1025:65:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "951:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "963:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "974:4:12",
                "type": ""
              }
            ],
            "src": "887:210:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1187:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1169:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1158:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1130:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1140:7:12",
                "type": ""
              }
            ],
            "src": "1103:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:48:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:32:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1282:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1275:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1268:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:21:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1257:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1239:7:12",
                "type": ""
              }
            ],
            "src": "1205:90:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1371:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1378:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1367:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1356:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1328:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1338:7:12",
                "type": ""
              }
            ],
            "src": "1301:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1533:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1542:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1545:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1535:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1535:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1535:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1499:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1524:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1506:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1506:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1496:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1486:2:12"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1469:5:12",
                "type": ""
              }
            ],
            "src": "1433:122:12"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "196:3736:1:-:0;;;1711:5:5;1690:26;;;;;;;;;;;;;;;;;;;;1778:1:1;1754:25;;196:3736;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "196:3736:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:25:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1496;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2487:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3033;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4039:126;;;:::i;:::-;;2760:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1690:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3670:81;;;:::i;:::-;;1558:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1527;;;;;;;;;;;;;:::o;1496:::-;;;;;;;;;;;;:::o;2487:128::-;1830:10;;;;;;;;;;1816:24;;:10;:24;;;1808:33;;;;;;2574:1:::1;2555:21;;:7;:21;;;;2547:30;;;::::0;::::1;;2601:7;2588:10;::::0;:20:::1;;;;;;;;;;;;;;;;;;2487:128:::0;:::o;3033:::-;1830:10;;;;;;;;;;1816:24;;:10;:24;;;1808:33;;;;;;3120:1:::1;3101:21;;:7;:21;;;;3093:30;;;::::0;::::1;;3147:7;3134:10;;:20;;;;;;;;;;;;;;;;;;3033:128:::0;:::o;4039:126::-;1830:10;;;;;;;;;;1816:24;;:10;:24;;;1808:33;;;;;;3492:6:::1;;;;;;;;;;;3484:15;;;::::0;::::1;;4153:5:::2;4144:6;;:14;;;;;;;;;;;;;;;;;;4039:126::o:0;2760:128::-;1830:10;;;;;;;;;;1816:24;;:10;:24;;;1808:33;;;;;;2847:1:::1;2828:21;;:7;:21;;;;2820:30;;;::::0;::::1;;2874:7;2861:10;;:20;;;;;;;;;;;;;;;;;;2760:128:::0;:::o;1690:26::-;;;;;;;;;;;;;:::o;3670:81::-;2216:10;;;;;;;;;;;2202:24;;:10;:24;;;:68;;;;2260:10;;;;;;;;;;2246:24;;:10;:24;;;2202:68;:112;;;;2304:10;;;;;;;;;;;2290:24;;:10;:24;;;2202:112;2181:143;;;;;;3351:6:::1;;;;;;;;;;;3350:7;3342:16;;;::::0;::::1;;3740:4:::2;3731:6;;:13;;;;;;;;;;;;;;;;;;3670:81::o:0;1558:25::-;;;;;;;;;;;;;:::o;7:139:12:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:222::-;;790:2;779:9;775:18;767:26;;803:71;871:1;860:9;856:17;847:6;803:71;:::i;:::-;757:124;;;;:::o;887:210::-;;1012:2;1001:9;997:18;989:26;;1025:65;1087:1;1076:9;1072:17;1063:6;1025:65;:::i;:::-;979:118;;;;:::o;1103:96::-;;1169:24;1187:5;1169:24;:::i;:::-;1158:35;;1148:51;;;:::o;1205:90::-;;1282:5;1275:13;1268:21;1257:32;;1247:48;;;:::o;1301:126::-;;1378:42;1371:5;1367:54;1356:65;;1346:81;;;:::o;1433:122::-;1506:24;1524:5;1506:24;:::i;:::-;1499:5;1496:35;1486:2;;1545:1;1542;1535:12;1486:2;1476:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../roles/Roles.sol\";\nimport \"../roles/ExecutivesAccessControl.sol\";\nimport \"@openzeppelin/contracts/finance/PaymentSplitter.sol\";\n\ncontract CrowdDropBase is ExecutivesAccessControl {\n    /*** EVENTS ***/\n\n    /// @dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering.\n    event RegistrationOpen();\n\n    /// @dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering.\n    //    After this event fires users can no longer register, and users who have registered can claim winnings.\n    event WinningsClaimingOpen();\n\n    /// @dev The EventClose event is fired whenever an event closes. After this event is fired users can no\n    //    longer claim winnings\n    event EventClose();\n\n    /// @dev Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred\n\n    event Transfer(address from, address to); // Assumed Eth\n\n    // TODO - (in later, more than just eth contracts as pass tokenId)\n    // event Transfer(address from, address to, uint tokenId);\n\n    /*** DATA TYPES ***/\n\n    /// @dev The main Kitty struct. Every cat in CryptoKitties is represented by a copy\n    ///  of this structure, so great care was taken to ensure that it fits neatly into\n    ///  exactly two 256-bit words. Note that the order of the members in this structure\n    ///  is important because of the byte-packing rules used by Ethereum.\n    ///  Ref: http://solidity.readthedocs.io/en/develop/miscellaneous.html\n\n    // TODO - ^ think harder about all that byte-packing junk... 😅\n\n    enum EventState {\n        CREATED,\n        REGISTRATION,\n        CLAIM_WINNINGS,\n        ENDED\n    }\n\n    uint devCutPercentage = 5;\n\n    struct CrowdDropEvent {\n        // The IRL organization that controls their own airdrops.\n        // Each group can only be running 1 event at a time.\n        uint groupId;\n        // Event goes through a linear flow of states, finite state machine.\n        EventState currentState;\n        // The timestamp from the block when this event started.\n        uint startTime;\n        // The timestamp from the block when registration for this event ended.\n        uint registrationEndTime;\n        // The timestamp from the block when this event ended.\n        uint endTime;\n        // The number of eligibleRecipients who have registered.\n        uint registeredRecipientsCount;\n        // Data about the sponsor info (address is stored in Roles)\n        string sponsorName;\n        string sponsorImageUrl;\n        string sponsorLinkToUrl;\n        address currentContributor;\n    }\n\n    // ALL events happening now or in the future.\n    // Key is the groupId\n    mapping(uint => CrowdDropEvent) currentEvents;\n\n    // ALL events that have already happened.\n    // Key is the groupId\n    mapping(uint => CrowdDropEvent[]) pastEvents;\n\n    // Holds ALL admins for all groups\n    // groupId => Role\n    mapping(uint => mapping(address => bool)) admins;\n\n    // Holds ALL contributors for all groups\n    // groupId => Role\n    mapping(uint => mapping(address => bool)) contributors;\n\n    // Holds ALL eligibleRecipients for all groups\n    // groupId => Role\n    mapping(uint => mapping(address => bool)) eligibleRecipients;\n\n    // Holds ALL registeredRecipients for all groups\n    // groupId => Role\n    mapping(uint => mapping(address => bool)) registeredRecipients;\n\n    // Holds ALL registeredRecipients in an array (for PaymentSplitter)\n    // groupId => address[]\n    mapping(uint => address[]) registeredRecipientsArray;\n\n    // Keeping track of winnings for all groups\n    mapping(uint => PaymentSplitter) pot;\n\n    // Any C-level can fix how many seconds per blocks are currently observed.\n    // function setSecondsPerBlock(uint secs) external onlyCLevel {\n    //     require(secs < cooldowns[0]);\n    //     secondsPerBlock = secs;\n    // }\n}\n",
  "sourcePath": "/Users/jim/Git-Projects/CrowdDrop/eth/contracts/core/CrowdDropBase.sol",
  "ast": {
    "absolutePath": "/Users/jim/Git-Projects/CrowdDrop/eth/contracts/core/CrowdDropBase.sol",
    "exportedSymbols": {
      "Address": [
        1921
      ],
      "Context": [
        1942
      ],
      "CrowdDropBase": [
        131
      ],
      "ExecutivesAccessControl": [
        1055
      ],
      "PaymentSplitter": [
        1625
      ],
      "Roles": [
        1330
      ],
      "SafeMath": [
        2254
      ]
    },
    "id": 132,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/Users/jim/Git-Projects/CrowdDrop/eth/contracts/roles/Roles.sol",
        "file": "../roles/Roles.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 1331,
        "src": "57:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jim/Git-Projects/CrowdDrop/eth/contracts/roles/ExecutivesAccessControl.sol",
        "file": "../roles/ExecutivesAccessControl.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 1056,
        "src": "86:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/finance/PaymentSplitter.sol",
        "file": "@openzeppelin/contracts/finance/PaymentSplitter.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 1626,
        "src": "133:61:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38,
              "name": "ExecutivesAccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1055,
              "src": "222:23:1"
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "222:23:1"
          }
        ],
        "contractDependencies": [
          1055
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 131,
        "linearizedBaseContracts": [
          131,
          1055
        ],
        "name": "CrowdDropBase",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "274:103:1",
              "text": "@dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
            },
            "id": 42,
            "name": "RegistrationOpen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:2:1"
            },
            "src": "382:25:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "413:103:1",
              "text": "@dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
            },
            "id": 45,
            "name": "WinningsClaimingOpen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:2:1"
            },
            "src": "634:29:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "669:103:1",
              "text": "@dev The EventClose event is fired whenever an event closes. After this event is fired users can no"
            },
            "id": 48,
            "name": "EventClose",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:2:1"
            },
            "src": "809:19:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "834:101:1",
              "text": "@dev Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred"
            },
            "id": 55,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "955:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "969:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:26:1"
            },
            "src": "940:41:1"
          },
          {
            "canonicalName": "CrowdDropBase.EventState",
            "id": 60,
            "members": [
              {
                "id": 56,
                "name": "CREATED",
                "nodeType": "EnumValue",
                "src": "1674:7:1"
              },
              {
                "id": 57,
                "name": "REGISTRATION",
                "nodeType": "EnumValue",
                "src": "1691:12:1"
              },
              {
                "id": 58,
                "name": "CLAIM_WINNINGS",
                "nodeType": "EnumValue",
                "src": "1713:14:1"
              },
              {
                "id": 59,
                "name": "ENDED",
                "nodeType": "EnumValue",
                "src": "1737:5:1"
              }
            ],
            "name": "EventState",
            "nodeType": "EnumDefinition",
            "src": "1648:100:1"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "devCutPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "1754:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1754:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1778:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CrowdDropBase.CrowdDropEvent",
            "id": 85,
            "members": [
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "groupId",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "1945:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1945:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "currentState",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2044:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_EventState_$60",
                  "typeString": "enum CrowdDropBase.EventState"
                },
                "typeName": {
                  "id": 67,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 66,
                    "name": "EventState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 60,
                    "src": "2044:10:1"
                  },
                  "referencedDeclaration": 60,
                  "src": "2044:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_EventState_$60",
                    "typeString": "enum CrowdDropBase.EventState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "startTime",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2142:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2142:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "registrationEndTime",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2246:24:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2246:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "endTime",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2343:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 73,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2343:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "registeredRecipientsCount",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2430:30:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2430:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "sponsorName",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2538:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 77,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2538:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "sponsorImageUrl",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2566:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 79,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2566:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "sponsorLinkToUrl",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2598:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2598:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "currentContributor",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2631:26:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 83,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2631:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CrowdDropEvent",
            "nodeType": "StructDefinition",
            "scope": 131,
            "src": "1786:878:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 90,
            "mutability": "mutable",
            "name": "currentEvents",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "2746:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CrowdDropEvent_$85_storage_$",
              "typeString": "mapping(uint256 => struct CrowdDropBase.CrowdDropEvent)"
            },
            "typeName": {
              "id": 89,
              "keyType": {
                "id": 86,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2754:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2746:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CrowdDropEvent_$85_storage_$",
                "typeString": "mapping(uint256 => struct CrowdDropBase.CrowdDropEvent)"
              },
              "valueType": {
                "id": 88,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 87,
                  "name": "CrowdDropEvent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 85,
                  "src": "2762:14:1"
                },
                "referencedDeclaration": 85,
                "src": "2762:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_CrowdDropEvent_$85_storage_ptr",
                  "typeString": "struct CrowdDropBase.CrowdDropEvent"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 96,
            "mutability": "mutable",
            "name": "pastEvents",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "2870:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_CrowdDropEvent_$85_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct CrowdDropBase.CrowdDropEvent[])"
            },
            "typeName": {
              "id": 95,
              "keyType": {
                "id": 91,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2878:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2870:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_CrowdDropEvent_$85_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct CrowdDropBase.CrowdDropEvent[])"
              },
              "valueType": {
                "baseType": {
                  "id": 93,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 92,
                    "name": "CrowdDropEvent",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 85,
                    "src": "2886:14:1"
                  },
                  "referencedDeclaration": 85,
                  "src": "2886:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CrowdDropEvent_$85_storage_ptr",
                    "typeString": "struct CrowdDropBase.CrowdDropEvent"
                  }
                },
                "id": 94,
                "nodeType": "ArrayTypeName",
                "src": "2886:16:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_CrowdDropEvent_$85_storage_$dyn_storage_ptr",
                  "typeString": "struct CrowdDropBase.CrowdDropEvent[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "admins",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "2983:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 101,
              "keyType": {
                "id": 97,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2991:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2983:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 100,
                "keyType": {
                  "id": 98,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3007:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2999:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 99,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3018:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 108,
            "mutability": "mutable",
            "name": "contributors",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3106:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 107,
              "keyType": {
                "id": 103,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3114:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3106:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 106,
                "keyType": {
                  "id": 104,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3130:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3122:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 105,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3141:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 114,
            "mutability": "mutable",
            "name": "eligibleRecipients",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3241:60:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 113,
              "keyType": {
                "id": 109,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3249:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3241:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 112,
                "keyType": {
                  "id": 110,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3265:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3257:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 111,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3276:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "registeredRecipients",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3384:62:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 119,
              "keyType": {
                "id": 115,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3392:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3384:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 118,
                "keyType": {
                  "id": 116,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3408:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3400:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 117,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3419:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 125,
            "mutability": "mutable",
            "name": "registeredRecipientsArray",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3553:52:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 124,
              "keyType": {
                "id": 121,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3561:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3553:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3569:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 123,
                "nodeType": "ArrayTypeName",
                "src": "3569:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 130,
            "mutability": "mutable",
            "name": "pot",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3660:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_PaymentSplitter_$1625_$",
              "typeString": "mapping(uint256 => contract PaymentSplitter)"
            },
            "typeName": {
              "id": 129,
              "keyType": {
                "id": 126,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3668:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3660:32:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_PaymentSplitter_$1625_$",
                "typeString": "mapping(uint256 => contract PaymentSplitter)"
              },
              "valueType": {
                "id": 128,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 127,
                  "name": "PaymentSplitter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1625,
                  "src": "3676:15:1"
                },
                "referencedDeclaration": 1625,
                "src": "3676:15:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_PaymentSplitter_$1625",
                  "typeString": "contract PaymentSplitter"
                }
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 132,
        "src": "196:3736:1"
      }
    ],
    "src": "32:3901:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/jim/Git-Projects/CrowdDrop/eth/contracts/core/CrowdDropBase.sol",
    "exportedSymbols": {
      "Address": [
        1921
      ],
      "Context": [
        1942
      ],
      "CrowdDropBase": [
        131
      ],
      "ExecutivesAccessControl": [
        1055
      ],
      "PaymentSplitter": [
        1625
      ],
      "Roles": [
        1330
      ],
      "SafeMath": [
        2254
      ]
    },
    "id": 132,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/Users/jim/Git-Projects/CrowdDrop/eth/contracts/roles/Roles.sol",
        "file": "../roles/Roles.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 1331,
        "src": "57:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jim/Git-Projects/CrowdDrop/eth/contracts/roles/ExecutivesAccessControl.sol",
        "file": "../roles/ExecutivesAccessControl.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 1056,
        "src": "86:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/finance/PaymentSplitter.sol",
        "file": "@openzeppelin/contracts/finance/PaymentSplitter.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 1626,
        "src": "133:61:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38,
              "name": "ExecutivesAccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1055,
              "src": "222:23:1"
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "222:23:1"
          }
        ],
        "contractDependencies": [
          1055
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 131,
        "linearizedBaseContracts": [
          131,
          1055
        ],
        "name": "CrowdDropBase",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "274:103:1",
              "text": "@dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
            },
            "id": 42,
            "name": "RegistrationOpen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:2:1"
            },
            "src": "382:25:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "413:103:1",
              "text": "@dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
            },
            "id": 45,
            "name": "WinningsClaimingOpen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:2:1"
            },
            "src": "634:29:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "669:103:1",
              "text": "@dev The EventClose event is fired whenever an event closes. After this event is fired users can no"
            },
            "id": 48,
            "name": "EventClose",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:2:1"
            },
            "src": "809:19:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "834:101:1",
              "text": "@dev Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred"
            },
            "id": 55,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "955:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "969:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:26:1"
            },
            "src": "940:41:1"
          },
          {
            "canonicalName": "CrowdDropBase.EventState",
            "id": 60,
            "members": [
              {
                "id": 56,
                "name": "CREATED",
                "nodeType": "EnumValue",
                "src": "1674:7:1"
              },
              {
                "id": 57,
                "name": "REGISTRATION",
                "nodeType": "EnumValue",
                "src": "1691:12:1"
              },
              {
                "id": 58,
                "name": "CLAIM_WINNINGS",
                "nodeType": "EnumValue",
                "src": "1713:14:1"
              },
              {
                "id": 59,
                "name": "ENDED",
                "nodeType": "EnumValue",
                "src": "1737:5:1"
              }
            ],
            "name": "EventState",
            "nodeType": "EnumDefinition",
            "src": "1648:100:1"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "devCutPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "1754:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1754:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1778:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CrowdDropBase.CrowdDropEvent",
            "id": 85,
            "members": [
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "groupId",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "1945:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1945:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "currentState",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2044:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_EventState_$60",
                  "typeString": "enum CrowdDropBase.EventState"
                },
                "typeName": {
                  "id": 67,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 66,
                    "name": "EventState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 60,
                    "src": "2044:10:1"
                  },
                  "referencedDeclaration": 60,
                  "src": "2044:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_EventState_$60",
                    "typeString": "enum CrowdDropBase.EventState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "startTime",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2142:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2142:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "registrationEndTime",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2246:24:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2246:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "endTime",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2343:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 73,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2343:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "registeredRecipientsCount",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2430:30:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2430:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "sponsorName",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2538:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 77,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2538:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "sponsorImageUrl",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2566:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 79,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2566:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "sponsorLinkToUrl",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2598:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2598:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "currentContributor",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "2631:26:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 83,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2631:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CrowdDropEvent",
            "nodeType": "StructDefinition",
            "scope": 131,
            "src": "1786:878:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 90,
            "mutability": "mutable",
            "name": "currentEvents",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "2746:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CrowdDropEvent_$85_storage_$",
              "typeString": "mapping(uint256 => struct CrowdDropBase.CrowdDropEvent)"
            },
            "typeName": {
              "id": 89,
              "keyType": {
                "id": 86,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2754:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2746:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CrowdDropEvent_$85_storage_$",
                "typeString": "mapping(uint256 => struct CrowdDropBase.CrowdDropEvent)"
              },
              "valueType": {
                "id": 88,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 87,
                  "name": "CrowdDropEvent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 85,
                  "src": "2762:14:1"
                },
                "referencedDeclaration": 85,
                "src": "2762:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_CrowdDropEvent_$85_storage_ptr",
                  "typeString": "struct CrowdDropBase.CrowdDropEvent"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 96,
            "mutability": "mutable",
            "name": "pastEvents",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "2870:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_CrowdDropEvent_$85_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct CrowdDropBase.CrowdDropEvent[])"
            },
            "typeName": {
              "id": 95,
              "keyType": {
                "id": 91,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2878:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2870:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_CrowdDropEvent_$85_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct CrowdDropBase.CrowdDropEvent[])"
              },
              "valueType": {
                "baseType": {
                  "id": 93,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 92,
                    "name": "CrowdDropEvent",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 85,
                    "src": "2886:14:1"
                  },
                  "referencedDeclaration": 85,
                  "src": "2886:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CrowdDropEvent_$85_storage_ptr",
                    "typeString": "struct CrowdDropBase.CrowdDropEvent"
                  }
                },
                "id": 94,
                "nodeType": "ArrayTypeName",
                "src": "2886:16:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_CrowdDropEvent_$85_storage_$dyn_storage_ptr",
                  "typeString": "struct CrowdDropBase.CrowdDropEvent[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "admins",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "2983:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 101,
              "keyType": {
                "id": 97,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2991:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2983:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 100,
                "keyType": {
                  "id": 98,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3007:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2999:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 99,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3018:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 108,
            "mutability": "mutable",
            "name": "contributors",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3106:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 107,
              "keyType": {
                "id": 103,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3114:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3106:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 106,
                "keyType": {
                  "id": 104,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3130:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3122:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 105,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3141:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 114,
            "mutability": "mutable",
            "name": "eligibleRecipients",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3241:60:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 113,
              "keyType": {
                "id": 109,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3249:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3241:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 112,
                "keyType": {
                  "id": 110,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3265:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3257:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 111,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3276:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "registeredRecipients",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3384:62:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 119,
              "keyType": {
                "id": 115,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3392:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3384:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 118,
                "keyType": {
                  "id": 116,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3408:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3400:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 117,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3419:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 125,
            "mutability": "mutable",
            "name": "registeredRecipientsArray",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3553:52:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 124,
              "keyType": {
                "id": 121,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3561:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3553:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3569:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 123,
                "nodeType": "ArrayTypeName",
                "src": "3569:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 130,
            "mutability": "mutable",
            "name": "pot",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "3660:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_PaymentSplitter_$1625_$",
              "typeString": "mapping(uint256 => contract PaymentSplitter)"
            },
            "typeName": {
              "id": 129,
              "keyType": {
                "id": 126,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3668:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3660:32:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_PaymentSplitter_$1625_$",
                "typeString": "mapping(uint256 => contract PaymentSplitter)"
              },
              "valueType": {
                "id": 128,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 127,
                  "name": "PaymentSplitter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1625,
                  "src": "3676:15:1"
                },
                "referencedDeclaration": 1625,
                "src": "3676:15:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_PaymentSplitter_$1625",
                  "typeString": "contract PaymentSplitter"
                }
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 132,
        "src": "196:3736:1"
      }
    ],
    "src": "32:3901:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-14T19:36:43.501Z",
  "devdoc": {
    "events": {
      "EventClose()": {
        "details": "The EventClose event is fired whenever an event closes. After this event is fired users can no"
      },
      "RegistrationOpen()": {
        "details": "The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
      },
      "Transfer(address,address)": {
        "details": "Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred"
      },
      "WinningsClaimingOpen()": {
        "details": "The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
      }
    },
    "kind": "dev",
    "methods": {
      "pause()": {
        "details": "Called by any \"C-level\" role to pause the contract. Used only when  a bug or exploit is detected and we need to limit damage."
      },
      "setCEO(address)": {
        "details": "Assigns a new address to act as the CEO. Only available to the current CEO.",
        "params": {
          "_newCEO": "The address of the new CEO"
        }
      },
      "setCFO(address)": {
        "details": "Assigns a new address to act as the CFO. Only available to the current CEO.",
        "params": {
          "_newCFO": "The address of the new CFO"
        }
      },
      "setCOO(address)": {
        "details": "Assigns a new address to act as the COO. Only available to the current CEO.",
        "params": {
          "_newCOO": "The address of the new COO"
        }
      },
      "unpause()": {
        "details": "Unpauses the smart contract. Can only be called by the CEO, since  one reason we may pause the contract is when CFO or COO accounts are  compromised."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "version": 1
  }
}